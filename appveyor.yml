version: '0.0.1.{build}'
environment:
  baseVersion: '0.0.3'
  
image: Visual Studio 2017
configuration: Release
platform: Any CPU

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '$(packageVersion)'
  package_version: '$(packageVersion)'
  assembly_version: '$(buildVersion)'
  file_version: '$(buildVersion)'
  informational_version: '$(packageVersion)'

branches:
  only:
    - master

before_build:
- nuget restore

init:
- ps: >-
    $env:runNugetDeploy  = "false";
    $env:runNugetRelease = "false";
    
    $env:buildVersion    = "$env:baseVersion.$env:appveyor_build_number";
    $env:packageVersion  = "$env:baseVersion-build-$env:appveyor_build_number";

    if ($env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED.Contains("[build]")) {
      echo ==== PRE-RELEASE BUILD ====;

      $env:runNugetDeploy  = "true";
    }
    elseif ($env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED.Contains("[release]")) {
      echo ==== RELEASE BUILD ====;

      $env:runNugetDeploy  = "true";
      $env:runNugetRelease = "true";

      $env:buildVersion    = "$env:baseVersion.0";
      $env:packageVersion  = "$env:baseVersion";
    }
    else {
      echo ==== TEST BUILD ====;
    }

artifacts:
- path: '**\*.nupkg'

deploy:
  provider: NuGet
  api_key:
    secure: QVGLofIy2zySjb1ZW8e730tg6PxVB+++YvaJh/Dc54LA6h6u+2Cf4davQ9PPGn7E
  artifact: /.*\.nupkg/
  on:
    runNugetPack: true
